package chatting.step3.server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

/*
 * 여러명의 클라이어느의 접속을 받아서
 * 문자기반의 메세지를 주고받을 수 있는
 * 서버측 로직을 작성
 * ::
 * ChattServer - - -  Process
 *      |-------> ServerSocket, ArrayList, Socket
 *                broadcast()
 *                
 * ChattThread - - - Thread
 *      |--------> Socket, BufferedReader, PrintWriter 
 */
public class ChattServer {
	// Process의 필드를 지정
	ServerSocket server;
	Socket s;
	ArrayList<Chatthread> list;

	public ChattServer() {
	}

	public void net() {
		try {
			server = new ServerSocket(60000);
			System.out.println("Server Ready......");
			
			while(true) {
				s=server.accept();
				Chatthread ct = new Chatthread(s);
				ct.start();//..작업이 병렬적으로 진행됨
			}

		} catch (Exception e) {

		} finally {

		}
	}

	public static void main(String[] args) {
		ChattServer process = new ChattServer();
		process.net();

	}

}
//서버와 연결되 클라이언트와 메세지를 주고받는 알미나 전달하는 쓰레드...작업 쓰레드

class Chatthread extends Thread {
	Socket s;
	BufferedReader br;
	PrintWriter pw;
	
	Chatthread(Socket s){
		this.s = s;
	}

	

	public void run() {

	}
}
