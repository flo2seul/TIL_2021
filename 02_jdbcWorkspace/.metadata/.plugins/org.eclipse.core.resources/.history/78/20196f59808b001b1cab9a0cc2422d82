package broker.twotier.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;

import broker.twotier.exception.DuplicateSSNException;
import broker.twotier.exception.RecordNotFoundException;
import broker.twotier.vo.CustomerRec;
import broker.twotier.vo.SharesRec;
import broker.twotier.vo.StockRec;
import config.ServerInfo;

public class Database implements DatabaseTemplate{
	
	public  Database(String serverIp) throws ClassNotFoundException {
		Class.forName(ServerInfo.DRIVER);
		System.out.println("Driver Loading....");
	}
	

	@Override
	public Connection getConnect() throws SQLException {
		Connection conn = DriverManager.getConnection(ServerInfo.URL, ServerInfo.USER, ServerInfo.PASSWORD);
		System.out.println("디비 서버 연결..");
		return conn;

	}

	@Override
	public void closeAll(PreparedStatement ps, Connection conn) throws SQLException {
		if (ps != null)
			ps.close();
		if (conn != null)
			conn.close();

		
	}

	@Override
	public void closeAll(ResultSet rs, PreparedStatement ps, Connection conn) throws SQLException {
		if (rs != null)
			rs.close();
		closeAll(ps, conn);

	}
	public int isSsn(String ssn) throws SQLException {
		int count = 0;
		Connection conn = null;
		PreparedStatement ps = null;
		ResultSet rs = null;
		String query = "SELECT count(*) FROM customer  WHERE ssn=?";
		try {
			conn = getConnect();
			ps = conn.prepareStatement(query);
			ps.setString(1, ssn);
			rs = ps.executeQuery();
			if (rs.next()) {
				count = rs.getInt(1);
				return count;
			} else {
				return count;
			}
		} finally {
			closeAll(rs, ps, conn);
		}
	}

	@Override
	public void addCustomer(CustomerRec cust) throws SQLException, DuplicateSSNException {
		Connection conn = null;
		PreparedStatement ps = null;
		try {
			conn = getConnect();
			
			if(isSsn(cust.getSsn())==0) {//ssn에 해당하는 회원이 없다면
				String query = "INSERT INTO customer(?,?,?)";
				ps = conn.prepareStatement(query);
				ps.setString(1, cust.getSsn());
				ps.setString(2, cust.getName());
				ps.setString(3, cust.getAddress());
				System.out.println(ps.executeUpdate() + "명이 추가되었습니다.");
			}else { //이미 가입된 회원의 ssn이라면..예외발생
				throw new DuplicateSSNException();
			}}finally {
				closeAll(ps, conn);
			}
		}
	
	@Override
	public void deleteCustomer(String ssn) throws SQLException, RecordNotFoundException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void updateCustomer(CustomerRec cust) throws SQLException, RecordNotFoundException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Vector<SharesRec> getPortfolio(String ssn) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CustomerRec getCustomer(String ssn) throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ArrayList<CustomerRec> getAllCustomers() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public ArrayList<StockRec> getAllStocks() throws SQLException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public void buyShares(String ssn, String symbol, int quantity) throws SQLException {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void sellShares(String ssn, String symbol, int quantity) throws SQLException, RecordNotFoundException {
		// TODO Auto-generated method stub
		
	}


	

}
